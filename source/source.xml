<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="http://docbook.org/xml/5.0/rng/docbook.rng" schematypens="http://relaxng.org/ns/structure/1.0"?>
<?xml-model href="http://docbook.org/xml/5.0/rng/docbook.rng" type="application/xml" schematypens="http://purl.oclc.org/dsdl/schematron"?>
<book xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0">
  <info>
    <title>transpect.github.io</title>
    <!-- 
      part      ...   left nav-bar entry
      chapter   ...   left nav-bar subentry (only multiple chapters become subentries)
      section   ...   right table of contents
      appendix  ...   becomes footer?
    -->
  </info>
  <part>
    <title>About</title>
    <chapter xml:base="index.html">
      <title>transpect</title>
      <subtitle>An open source framework for converting and checking data</subtitle>
      <para role="col">Transpect was designed to provide generic and stable modules for common conversion and checking
        tasks. To adress complex and diverse data, transpect offers a cascading configuration to override specific
        transformation and checking rules. Each component within the framework is Open Source and use standard
        technologies such as XSLT 2.0 and XProc.</para>
      <section>
        <title>Data Conversion</title>
        <para>Transpect offers many modules to parse and convert a wide range of XML-based formats such as DOCX, IDML,
          EPUB, NLM JATS/BITS and TEI. Additionally, there exist tools for converting text-based formats such as CSS and
          LaTeX as well as extensions, e. g., in order to check PDF and image files. The following list of supported
          formats makes no claim to be comprehensive.</para>
        <informaltable>
          <thead>
            <tr>
              <td>Format</td>
              <td>Parse</td>
              <td>Generate</td>
              <td>Remark</td>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td>EPUB 2/3</td>
              <td>&#x2713;</td>
              <td>&#x2713;</td>
              <td>including Landmarks, Fixed Layout, Media Overlays, Structural Semantics Vocabulary</td>
            </tr>
            <tr>
              <td>HTML, CSS</td>
              <td>&#x2713;</td>
              <td>&#x2713;</td>
              <td>including conversion from CSS to CSSa</td>
            </tr>
            <tr>
              <td>Images</td>
              <td>&#x2713;</td>
              <td>–</td>
              <td>extract technical metadata, conversion is possible with 3rd-party software</td>
            </tr>
            <tr>
              <td>InDesign Markup Language (IDML)</td>
              <td>&#x2713;</td>
              <td>&#x2713;</td>
              <td>Styles are retained as CSSa. Generation is limited to one main story yet.</td>
            </tr>
            <tr>
              <td>Math (MathML, OMML, LaTeX)</td>
              <td>&#x2713;</td>
              <td>&#x2713;</td>
              <td>parsing MathType is possible with 3rd-party extensions</td>
            </tr>
            <tr>
              <td>Office Open XML, OpenDocument (ODT)</td>
              <td>&#x2713;</td>
              <td>&#x2713;</td>
              <td>Styles are retained as CSSa. Some OOXML are not supported yet but are retained (SmartArts,
                Drawings)</td>
            </tr>
            <tr>
              <td>XML formats, e.g. DocBook, NLM JATS/BITS/HoBots, TEI</td>
              <td>&#x2713;</td>
              <td>&#x2713;</td>
            </tr>
            <tr>
              <td>PDF</td>
              <td>–</td>
              <td>&#x2713;</td>
              <td>parsing is possible with 3rd-party extensions but limited due to the nature of the format</td>
            </tr>
          </tbody>
        </informaltable>
        <para>Many converters generate the intermediate format Hub XML. Hub XML is a DocBook 5.1 derivative that allows
          for documents that lack a proper section hierarchy and uses CSSa for expressing layout information. It is used
          as a common intermediate format to represent raw conversion results of, for example, OOXML, ODT, and IDML
          documents.</para>
      </section>
      <section>
        <title>Checking Data</title>
        <para>Transpect implements Schematron and Schema validation. Furthermore, many modules integrate error detection
          and recovery methods. Reports are stored as Schematron SVRL document. The report messages can be displayed in
          an HTML view of the document at the error location. </para>
      </section>
      <section>
        <title>Configuration Cascade</title>
        <para>Default transformation and checking rules (XSLT, Schematron, CSS, …) may be superseded with specific
          rules. These rules specified according to the group of content that the input belongs to, for example per
          company, per production-line, or per product.</para>
      </section>
      <section>
        <title>Open Source</title>
        <para>Transpect is published under the BSD 2-clause license, also known as FreeBSD License. This permissive
          license imposes minimal restrictions on the redistribution of the software. Therefore you can use the software
          in commercial and even in closed source projects.</para>
        <para> The license terms can be found here: <link xlink:href="http://opensource.org/licenses/BSD-2-Clause"
            >http://opensource.org/licenses/BSD-2-Clause</link>
        </para>
      </section>
      <section>
        <title>Industry Standards</title>
        <para>The technologies behind transpect are industry standards like XProc, XSLT 2.0 and Schematron. Their
          specifications are publicly available through international standards organizations such as W3C and
          ISO.</para>
        <informaltable>
          <tbody>
            <tr>
              <th>XProc</th>
              <td>A language to specify a sequence of operations to be performed on XML documents.</td>
            </tr>
            <tr>
              <th>XSLT 2.0</th>
              <td>XSLT is a programming language for the purpose of transforming XML documents. Due to several
                limitations of version 1.0, we recommend to use XSLT 2.0</td>
            </tr>
            <tr>
              <th>Schematron</th>
              <td>A rule-based schema language to validate XML documents.</td>
            </tr>
            <tr>
              <th>RelaxNG</th>
              <td>RelaxNG is an XML schema language to specify patterns for the structure of an XML document.</td>
            </tr>
          </tbody>
        </informaltable>
      </section>
      <section>
        <title>le-tex</title>
        <para>Transpect is developed and maintained by le-tex, a Leipzig-based company which provides professional
          services for publishers.</para>
      </section>
    </chapter>
  </part>
  <part>
    <title>Getting Started</title>
    <chapter xml:base="getting-started.html">
      <title>Getting Started</title>
      <subtitle>Learn how to use transpect</subtitle>
      <section>
        <title>Prerequisites</title>
        <para>There are no further prerequisites as are required to run XProc. If you are not familiar with XProc, we
          suggest to work yourself through Roger L. Costello’s <link xlink:href="http://www.xfront.com/xproc/">XProc
            tutorial</link> first.</para>
        <simplesect role="col s12 m6">
          <title>XML Calabash</title>
          <para>We recommend XML Calabash for running transpect’s XProc pipelines. You should use our pre-configured
            version of XML Calabash. It comes with extensions which are essential to some modules.</para>
          <!--<para><link xlink:href="https://github.com/transpect/calabash-frontend/" role="btn red">Get XML Calabash</link></para>-->
        </simplesect>
        <simplesect role="col s12 m6">
          <title>Java</title>
          <para>XML Calabash needs at least Java 1.7 to run. We noticed some odd behaviour while running XML Calabash
            with a JVMs other than Oracle. If you get memory issues, consider to install the 64-bit version.</para>
          <!--<para><link xlink:href="https://www.java.com/en/download/manual.jsp" role="btn red">Get Java</link></para>-->
        </simplesect>
      </section>
      <section>
        <title>Setup</title>
        <bridgehead>Install calabash</bridgehead>
        <para>After downloading, extract XML Calabash into your project directory. We </para>
        <programlisting>
MyProject/
  |--calabash/
  |  |--calabash.sh
  |  |--calabash.bat</programlisting>

      </section>
    </chapter>
  </part>
  <part>
    <title>Modules</title>
    <chapter xml:base="docx2hub.html">
      <title>docx2hub</title>
      <para>Cati sunte cus eumque et, exceate stendel estrum eiusam qui rem volut velent. Ossum ipit eaqui at volor
        simporeris evelic tectiande cum laccum quis eos moluptat. Harciam et, omni coneces eat pla nus di occatecatis
        samus ut quistendus asit modisqu aspelique nonsequi digent, que nus dit facero officie nectenis estia volorio
        maios iminvelique simet peditis quiassima sust, sitibusame verum nihil in cum ium hictas volo dolo volum aut
        imustiant min nit assimolorit autem quatur sam quamust, od utates vendae enienis santiis dolorat quis sim
        quidelibera dolutam aut acia vellabo reptiossus, voluptur, ut quos sum illendit lat. Onsedite culles alit estem
        el il estore molut omnia nonseni doluptatur am fugit archil ipsaperere conseque parciusa sed ut eos eatqui
        omniendi que porehenis aut qui blab ilitatium fugit aut adis saesciam corro offici in nobis acerum veritaqui
        offictur rest, illiquas dolor aut quiati vendi te offic tem consero quatias andendunt iur, conecume mos
        remquuntur, earum aut officia temquae cora doluptatur? Dia nestis remos seque dis et, coriam sinvelese pa volut
        reperna tibusa non et esequisita aut molo volectatem ut iscit ex et modicim agnaturiam enihil ima dolupitem re
        volut ommodi ut eum hicia doluptae ellatur rescipsus, con nost arcium re dolorum duscim harcium comnimus
        exereptatur, quianducias quaecer ibuscip santius delia quae cupta voluptatur a non porum lanihit reped que
        nectotae pres sam estotati dicae volut aut endi temolor erepeliquia aute consed quod quoditaes qui in cuptatur,
        sitis ni volore dolorit et ullaccus duntius molore, occum aut qui quam ut ut ium de nihil incidebis nimus aci
        nos velibus, omnis vita plaborro con nam expe non consedi tatecus que plit rat laccusdae. Itatem vercit,
        solorunt rectatur aborem fuga. Namust, omnim fugit est, alit, nonsequist, sus, omnimi, sunt, netus aperchil into
        voluptatur molor rerundem rem aut autem. Essunt doluptus asim illuptatis et rerum quodionseque doluptae
        quaectus, susae prorum quis sume doluptatur? Qui cus nonse quas cumquas itatur? Otatessed eatemol enihilitas
        eat. Genditia voloreptat restem atem conse omnim nulparum quaepero berumquo volum dolupti accum re provit, que
        est, con consecus, qui re velest et et volorere possit, consed qui cuptiatat volorro volorem dolecae</para>
    </chapter>
    <chapter xml:base="idml2hub.html">
      <title>idml2hub</title>
      <para>Cati sunte cus eumque et, exceate stendel estrum eiusam qui rem volut velent. Ossum ipit eaqui at volor
        simporeris evelic tectiande cum laccum quis eos moluptat. Harciam et, omni coneces eat pla nus di occatecatis
        samus ut quistendus asit modisqu aspelique nonsequi digent, que nus dit facero officie nectenis estia volorio
        maios iminvelique simet peditis quiassima sust, sitibusame verum nihil in cum ium hictas volo dolo volum aut
        imustiant min nit assimolorit autem quatur sam quamust, od utates vendae enienis santiis dolorat quis sim
        quidelibera dolutam aut acia vellabo reptiossus, voluptur, ut quos sum illendit lat. Onsedite culles alit estem
        el il estore molut omnia nonseni doluptatur am fugit archil ipsaperere conseque parciusa sed ut eos eatqui
        omniendi que porehenis aut qui blab ilitatium fugit aut adis saesciam corro offici in nobis acerum veritaqui
        offictur rest, illiquas dolor aut quiati vendi te offic tem consero quatias andendunt iur, conecume mos
        remquuntur, earum aut officia temquae cora doluptatur? Dia nestis remos seque dis et, coriam sinvelese pa volut
        reperna tibusa non et esequisita aut molo volectatem ut iscit ex et modicim agnaturiam enihil ima dolupitem re
        volut ommodi ut eum hicia doluptae ellatur rescipsus, con nost arcium re dolorum duscim harcium comnimus
        exereptatur, quianducias quaecer ibuscip santius delia quae cupta voluptatur a non porum lanihit reped que
        nectotae pres sam estotati dicae volut aut endi temolor erepeliquia aute consed quod quoditaes qui in cuptatur,
        sitis ni volore dolorit et ullaccus duntius molore, occum aut qui quam ut ut ium de nihil incidebis nimus aci
        nos velibus, omnis vita plaborro con nam expe non consedi tatecus que plit rat laccusdae. Itatem vercit,
        solorunt rectatur aborem fuga. Namust, omnim fugit est, alit, nonsequist, sus, omnimi, sunt, netus aperchil into
        voluptatur molor rerundem rem aut autem. Essunt doluptus asim illuptatis et rerum quodionseque doluptae
        quaectus, susae prorum quis sume doluptatur? Qui cus nonse quas cumquas itatur? Otatessed eatemol enihilitas
        eat. Genditia voloreptat restem atem conse omnim nulparum quaepero berumquo volum dolupti accum re provit, que
        est, con consecus, qui re velest et et volorere possit, consed qui cuptiatat volorro volorem dolecae</para>
    </chapter>
    <chapter xml:base="epubtools.html">
      <title>epubtools</title>
      <para>Cati sunte cus eumque et, exceate stendel estrum eiusam qui rem volut velent. Ossum ipit eaqui at volor
        simporeris evelic tectiande cum laccum quis eos moluptat. Harciam et, omni coneces eat pla nus di occatecatis
        samus ut quistendus asit modisqu aspelique nonsequi digent, que nus dit facero officie nectenis estia volorio
        maios iminvelique simet peditis quiassima sust, sitibusame verum nihil in cum ium hictas volo dolo volum aut
        imustiant min nit assimolorit autem quatur sam quamust, od utates vendae enienis santiis dolorat quis sim
        quidelibera dolutam aut acia vellabo reptiossus, voluptur, ut quos sum illendit lat. Onsedite culles alit estem
        el il estore molut omnia nonseni doluptatur am fugit archil ipsaperere conseque parciusa sed ut eos eatqui
        omniendi que porehenis aut qui blab ilitatium fugit aut adis saesciam corro offici in nobis acerum veritaqui
        offictur rest, illiquas dolor aut quiati vendi te offic tem consero quatias andendunt iur, conecume mos
        remquuntur, earum aut officia temquae cora doluptatur? Dia nestis remos seque dis et, coriam sinvelese pa volut
        reperna tibusa non et esequisita aut molo volectatem ut iscit ex et modicim agnaturiam enihil ima dolupitem re
        volut ommodi ut eum hicia doluptae ellatur rescipsus, con nost arcium re dolorum duscim harcium comnimus
        exereptatur, quianducias quaecer ibuscip santius delia quae cupta voluptatur a non porum lanihit reped que
        nectotae pres sam estotati dicae volut aut endi temolor erepeliquia aute consed quod quoditaes qui in cuptatur,
        sitis ni volore dolorit et ullaccus duntius molore, occum aut qui quam ut ut ium de nihil incidebis nimus aci
        nos velibus, omnis vita plaborro con nam expe non consedi tatecus que plit rat laccusdae. Itatem vercit,
        solorunt rectatur aborem fuga. Namust, omnim fugit est, alit, nonsequist, sus, omnimi, sunt, netus aperchil into
        voluptatur molor rerundem rem aut autem. Essunt doluptus asim illuptatis et rerum quodionseque doluptae
        quaectus, susae prorum quis sume doluptatur? Qui cus nonse quas cumquas itatur? Otatessed eatemol enihilitas
        eat. Genditia voloreptat restem atem conse omnim nulparum quaepero berumquo volum dolupti accum re provit, que
        est, con consecus, qui re velest et et volorere possit, consed qui cuptiatat volorro volorem dolecae</para>
    </chapter>
  </part>
  <part>
    <title>Styleguide</title>
    <chapter xml:base="styleguide.html">
      <title>Styleguide</title>
      <section>
        <title>General</title>
        <itemizedlist>
          <listitem>
            <para>Use <code>UTF-8</code> encoding</para>
          </listitem>
          <listitem>
            <para>Use soft-tabs with a two space indent</para>
          </listitem>
          <listitem>
            <para>Keep lines fewer than 80 characters</para>
          </listitem>
          <listitem>
            <para>Use spaces around operators, after commas, colons and semicolons</para>
          </listitem>
          <listitem>
            <para>Leave a blank newline at the end of each file</para>
          </listitem>
          <listitem>
            <para>Comment your code extensively and use always speaking variable names. </para>
          </listitem>
        </itemizedlist>
      </section>
      <section>
        <title>Repository</title>
        <section>
          <title>SVN Externals&#x2009;/&#x2009;Git Submodules</title>
          <itemizedlist>
            <listitem>
              <para>Always include SVN externals or Git submodules at the root of your repository.</para>
            </listitem>
            <listitem>
              <para>Use SVN externals or Git submodules only in your frontend project and not in libraries.</para>
            </listitem>
          </itemizedlist>
        </section>
        <section>
          <title>XML Catalogs</title>
          <itemizedlist>
            <listitem>
              <para>Include an XML catalog to your repository. The path of your catalog should be
                  <filename>xmlcatalog/catalog.xml</filename></para>
            </listitem>
            <listitem>
              <para>The catalog file must include a <code>rewriteURI</code> statement which identifies the repository
                with a URI.</para>
              <programlisting>
&lt;rewriteURI uriStartString="http://transpect.io/docx2hub/" 
            rewritePrefix="../"/></programlisting>
            </listitem>
          </itemizedlist>
        </section>
        <section>
          <title>Paths</title>
          <para>The code should be stored separated by code language. The directory name identifies the typical file
            extension of the code file. Always use common file extensions, such as <filename>xpl</filename> for XProc
            pipelines and <filename>xsl</filename> for XSLT Stylesheets.</para>
          <programlisting>
myproject/
  |--css
  |  |--stylesheet.css
  |--xmlcatalog/
  |  |--catalog.xml
  |--xpl
  |  |--myproject.xpl
  |--xsl
  |  |--myproject.xsl
</programlisting>
        </section>
      </section>
      <section>
        <title>XProc</title>
        <itemizedlist>
          <listitem>
            <para>Encapsulate commonly used functionality into components with <code>p:import</code> and
                <code>p:declare-step</code>. Add <code>name</code> and <code>type</code> attributes to each
                <code>p:declare-step</code> to make it accessible from inside and outside of the pipeline</para>
          </listitem>
          <listitem>
            <para>Avoid too many nested <code>p:choose</code> if possible. A proper XSLT is many times a better option
              to encapsulate application logic.</para>
          </listitem>
          <listitem>
            <para>Use <code>p:documentation</code> tags to explain what your pipeline does.</para>
          </listitem>
          <listitem>
            <para>Provide debugging features and console output in your pipeline, e.g. via <code>tr:store-debug</code>
              or <code>cx:message</code></para>
          </listitem>
          <listitem>
            <para>We encourage you to use the <code>cx:depends-on</code> attribute for declaring step order explicitely.
              This is needed when you want to use steps which operate with files.</para>
          </listitem>
        </itemizedlist>
      </section>
      <section>
        <title>XSLT</title>
        <itemizedlist>
          <listitem>
            <para>Avoid too many nested <code>xsl:choose</code> as this will make your code difficult do decipher. Try
              to replace with <code>xsl:template</code> with concrete matching patterns.</para>
          </listitem>
          <listitem>
            <para>Provide a data type for your variables and parameters via <code>as</code> attribute.</para>
          </listitem>
          <listitem>
            <para>Avoid to call named templates which call named templates and so on. If applicable use functions
              instead.</para>
          </listitem>
          <listitem>
            <para>Use XSLT modes only if technically required and not to separate your code logically. Be careful when
              using XSLT modes accompanied with identity templates as this will cost memory and reduce overall execution
              speed</para>
          </listitem>
          <listitem>
            <para>Use namespace <code>http://transpect.io</code> and prefix <code>tr</code> for custom functions.</para>
          </listitem>
        </itemizedlist>
      </section>
      <section>
        <title>XPath</title>
        <itemizedlist>
          <listitem>
            <para>Some XPath expressions force the XML parser to perform deep explorations of the XML tree. If you know
              the expected context, you can reduce CPU and memory usage by avoiding wildcard patterns (<code>*</code>,
                <code>@*</code>) and deep XPath axis requests (<code>ancestor</code>, <code>descendant</code> or
                <code>//*</code>, <code>preceding</code>, <code>following</code>).</para>
          </listitem>
          <listitem>
            <para>Sometimes regular expression (<code>matches()</code>, <code>replace()</code>, <code>tokenize()</code>)
              can be substituted with simple string manipulation functions (<code>contains</code>,
                <code>starts-with</code>, <code>ends-with</code>, <code>substring-before</code>,
                <code>substring-after</code>, <code>translate</code></para>
          </listitem>
          <listitem>
            <para>Indent longer conditional statements, loops and expressions with functions
              <literallayout><code>&lt;xsl:value-of select="if(foo)
then foo
else if (bar)
  then bar 
  else false()"/></code></literallayout></para>
          </listitem>
          <listitem>
            <para>Comment longer XPath statements: <code>(: my XPath comment :)</code></para>
          </listitem>
        </itemizedlist>
      </section>
      <section>
        <title>RelaxNG/XSD</title>
        <para>Use <link xlink:href="http://www.xfront.com/GlobalVersusLocal.html#SecondDesign">Salami Slice
            Design</link> pattern for writing Schemas</para>
      </section>
      <section>
        <title>DTD</title>
        <para>Yo mama use a DTD for her CD catalog.</para>
      </section>
    </chapter>
  </part>
</book>
